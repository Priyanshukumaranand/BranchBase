name: Build & Deploy backend (branch-only)

on:
  push:
    branches: [ "latest-tech-implementation" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-push-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image to GHCR
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/branchbase-backend:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/branchbase-backend:latest-branch-${{ github.ref_name }}

      - name: Trigger Render deploy
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          if [ -z "$RENDER_API_KEY" ] || [ -z "$RENDER_SERVICE_ID" ]; then
            echo "RENDER_API_KEY and RENDER_SERVICE_ID must be set in repository secrets";
            exit 1;
          fi

          echo "Triggering deploy for Render service: $RENDER_SERVICE_ID"

          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{"clearCache":true}' \
            "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys")

          echo "Render response: $RESPONSE"

          SUCCESS=$(echo "$RESPONSE" | jq -r '.id // empty')
          if [ -z "$SUCCESS" ]; then
            echo "Failed to trigger Render deploy. Response:"; echo "$RESPONSE"; exit 1;
          fi

          echo "Deploy triggered: $SUCCESS"
